import React, { useEffect, useState } from 'react'
import { getSession } from 'next-auth/react'
import Head from 'next/head'
import AnchorLink from '../../src/Components/AnchorLink'
import MainNav from '../../src/Components/MainNav'
import Button from '../../src/styledComponents/Button'
import RegisWrapper from '../../src/styledComponents/RegisWrapper'
import RentalWrapper from '../../src/styledComponents/RentalWrapper'
import axios from 'axios'
import ListCard from '../../src/Components/ListCard'

function Rentals({ userRooms }) {


    const [register, setRegister] = useState(true)
    const [rental, setRentals] = useState(null)
    const [favourites, setFavourites] = useState(false)

    const rooms = userRooms?.data

    console.log(rooms)

    useEffect(() => {
        setRentals(rooms)

    }, [])


    return (
        <RentalWrapper className="rental">
            <Head>
                <title> Rentals </title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <MainNav></MainNav>
            <RentalWrapper className="rental__page">
                <RentalWrapper register={register} className="rental__section" >
                    <RegisWrapper className="registration__tab" >
                        <Button
                            click={() => setRegister(false)}
                            name="sign__tab__btn sign__in__tab__select"
                            select={register}
                        >
                            Favorites
                        </Button>
                        <Button
                            click={() => setRegister(true)}
                            name="sign__tab__btn sign__up__tab__select"
                            select={register}
                        >
                            Rentals
                        </Button>
                    </RegisWrapper>
                </RentalWrapper>
                <RentalWrapper className="rental__main" >
                    {
                        register ? (
                            <RentalWrapper className="rental__section" >
                                {
                                    rental ? (
                                        <RentalWrapper className="rental__render">
                                            {rooms?.map((room, index) => (
                                                <ListCard room={room} key={index} />
                                            ))}
                                        </RentalWrapper>
                                    ) : (
                                        <RentalWrapper className="render__empty">
                                            <RentalWrapper className="render__empty__head">
                                                You have not rent out any room.
                                            </RentalWrapper>
                                            <RentalWrapper className="render__empty__btn">
                                                <AnchorLink route="/host">
                                                    <Button name="primary" >
                                                        Host a room
                                                    </Button>
                                                </AnchorLink>
                                            </RentalWrapper>
                                        </RentalWrapper>
                                    )
                                }
                            </RentalWrapper>
                        ) : (
                            <RentalWrapper className="rental__render">
                                {
                                    favourites ? "You have rentals" : (
                                        <RentalWrapper className="render__empty" >
                                            <RentalWrapper className="render__empty__head">
                                                You have no favourites.
                                            </RentalWrapper>
                                            <RentalWrapper className="render__empty__btn">
                                                <AnchorLink route="/dorms">
                                                    <Button name="primary" >
                                                        Add Favourties
                                                    </Button>
                                                </AnchorLink>
                                            </RentalWrapper>
                                        </RentalWrapper>
                                    )
                                }
                            </RentalWrapper>
                        )
                    }
                </RentalWrapper>
            </RentalWrapper>
        </RentalWrapper>
    )
}

export async function getServerSideProps(context) {
    const session = await getSession(context)
    const { userId } = context.query
    const response = await axios.get(`http://localhost:5000/getHostRooms?userId=${userId}`)

    const userRooms = response.data

    if (!session) {
        return {
            redirect: {
                destination: '/api/auth/signin?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2F',
                permanent: false
            }
        }
    }

    return {
        props: { session, userRooms }
    }
}

export default Rentals
