import React, { useCallback, useMemo, useState } from 'react'
import Head from "next/head";
import AnchorLink from '../../src/Components/AnchorLink'
import MainNav from '../../src/Components/MainNav'
import ProfileCard from '../../src/Components/ProfileCard'
import Button from '../../src/styledComponents/Button'
import Form from '../../src/styledComponents/Form'
import Input from '../../src/styledComponents/Input'
import ProfileWrapper from '../../src/styledComponents/ProfileWrapper'
import { getSession, useSession } from 'next-auth/react';

function index() {

    const [edit, setEdit] = useState(false)

    const { data: session } = useSession()
    const user = session.user.data
    console.log(user)

    const userProfile = useCallback(
        () => (
            <ProfileWrapper>
                <ProfileWrapper>
                    <ProfileWrapper>
                        Name
                    </ProfileWrapper>
                    <ProfileWrapper>
                        {user?.name}
                    </ProfileWrapper>
                </ProfileWrapper>
                <ProfileWrapper>
                    <ProfileWrapper>
                        Student Mail
                    </ProfileWrapper>
                    <ProfileWrapper>
                        {user?.email}
                    </ProfileWrapper>
                </ProfileWrapper>
                <ProfileWrapper>
                    <ProfileWrapper>
                        Student Id
                    </ProfileWrapper>
                    <ProfileWrapper>
                        {user?.id}
                    </ProfileWrapper>
                </ProfileWrapper>
                <ProfileWrapper>
                    <ProfileWrapper>
                        Mobile Number
                    </ProfileWrapper>
                    <ProfileWrapper>
                        {user?.mobile}
                    </ProfileWrapper>
                </ProfileWrapper>
                <ProfileWrapper>
                    <ProfileWrapper>
                        Gender
                    </ProfileWrapper>
                    <ProfileWrapper>
                        {user?.gender}
                    </ProfileWrapper>
                </ProfileWrapper>
                <ProfileWrapper>
                    <ProfileWrapper>
                        Level
                    </ProfileWrapper>
                    <ProfileWrapper>
                        {user?.level}
                    </ProfileWrapper>
                </ProfileWrapper>
            </ProfileWrapper>
        ),
        [],
    )

    // useMemo(() => function, input)

    const editProfileForm = () => (
        <Form className="profile__form" >
            <ProfileWrapper className="profile__form__main" >
                <ProfileWrapper className="profile__form__name" >
                    <ProfileWrapper
                        className=" profile__input__div " textholder="Name" >
                        <Input type="text" className=" profile__input " placeholder="Enter Name" />
                    </ProfileWrapper>
                    <ProfileWrapper
                        className=" profile__input__div " textholder="Surname" >
                        <Input type="text" className=" profile__input " placeholder="Enter Surname" />
                    </ProfileWrapper>
                </ProfileWrapper>
                <ProfileWrapper
                    className=" profile__input__div " textholder="E-mail" >
                    <Input type="email" className=" profile__input " placeholder="Enter student email" />
                </ProfileWrapper>
                <ProfileWrapper
                    className=" profile__input__div " textholder="Telephone" >
                    <Input type="text" className=" profile__input " placeholder="(+233) -- --- ---" />
                </ProfileWrapper>
                <ProfileWrapper
                    className=" profile__input__div " textholder="Student id" >
                    <Input type="text" className=" profile__input " placeholder="eg. 10928374" />
                </ProfileWrapper>

            </ProfileWrapper>
            <ProfileWrapper className="profile__form__btn" >
                <AnchorLink route="/dorms" >
                    <Button
                        name="primary" >
                        Save
                    </Button>
                </AnchorLink>
            </ProfileWrapper>
        </Form>
    )

    return (
        <ProfileWrapper className="profile">
            <Head>
                <title>Profile </title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <MainNav></MainNav>
            <ProfileWrapper className="profile__page">
                <ProfileWrapper className="profile__image__box">
                    <ProfileCard>
                        <Button name="tetiary expand">
                            Edit Image
                        </Button>
                        <Button
                            name="tetiary expand" click={() => setEdit(!edit)}>
                            Edit Profile
                        </Button>
                    </ProfileCard>
                </ProfileWrapper>
                <ProfileWrapper className="profile__page__main">
                    <ProfileWrapper className="profile__details">
                        <ProfileWrapper className="profile__head" >
                            Profile details
                        </ProfileWrapper>
                        {edit ? editProfileForm() : userProfile()}

                    </ProfileWrapper>
                    <ProfileWrapper className="profile__details" >
                        {edit ? (
                        <>
                        <ProfileWrapper className="profile__head">
                            Password
                        </ProfileWrapper>
                        <Form className="profile__form">
                            <ProfileWrapper className="profile__form__main" >
                                <ProfileWrapper
                                    className=" profile__input__div " textholder="Password" >
                                    <Input type="password" className=" profile__input " placeholder="Enter Password" />
                                </ProfileWrapper>
                                <ProfileWrapper
                                    className=" profile__input__div " textholder="Confirm Password" >
                                    <Input type="password" className=" profile__input " placeholder="Re-enter Password" />
                                </ProfileWrapper>
                            </ProfileWrapper>
                            <ProfileWrapper className="profile__form__btn" >
                                <AnchorLink route="/dorms" >
                                    <Button
                                        name="primary" >
                                        Save
                                    </Button>
                                </AnchorLink>
                            </ProfileWrapper>
                        </Form>
                        </>) : null}
                    </ProfileWrapper>
                </ProfileWrapper>
            </ProfileWrapper>
        </ProfileWrapper>
    )
}

export async function getServerSideProps(context) {
    const session = await getSession(context)

    if (!session) {
        return {
            redirect: {
                destination: '/api/auth/signin?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2F',
                permanent: false
            }
        }
    }

    return {
        props: { session }
    }
}

export default index
