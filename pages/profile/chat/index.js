import React, { useEffect, useState } from 'react'
import { getSession } from 'next-auth/react'
import Head from 'next/head'
import axios from 'axios'
import AnchorLink from '../../../src/Components/AnchorLink'
import MainNav from '../../../src/Components/MainNav'
import Button from '../../../src/styledComponents/Button'
import ChatWrapper from '../../../src/styledComponents/ChatWrapper'
import RentalWrapper from '../../../src/styledComponents/RentalWrapper'
import ChatCard from '../../../src/Components/ChatCard'

// Display all chats of the user if any is available 

function chatsIndex({ chats }) {

    const allChats = chats.data
    console.log(allChats)

    return (
        <ChatWrapper className="chats" >
            <Head>
                <title> Rentals </title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <MainNav></MainNav>
            <ChatWrapper className="chats__head" >
                Chats
            </ChatWrapper>
            <ChatWrapper className="chats__main" >
                {
                    chats ? (
                        <ChatWrapper className="chats__render" >
                            {
                                allChats?.map((chat, index) => (
                                    <ChatCard key={index} chatId={chat?.chat_id} >
                                        {chat?.chat_id}
                                    </ChatCard>
                                ))
                            }
                        </ChatWrapper>
                    ) : (
                        <RentalWrapper className="render__empty" >
                            <RentalWrapper className="render__empty__head">
                                You have no Chats.
                            </RentalWrapper>
                            <RentalWrapper className="render__empty__btn">
                                <AnchorLink route="/dorms">
                                    <Button name="primary" >
                                        Home
                                    </Button>
                                </AnchorLink>
                            </RentalWrapper>
                        </RentalWrapper>
                    )
                }
            </ChatWrapper>
        </ChatWrapper>
    )
}

export async function getServerSideProps(context) {
    const session = await getSession(context)
    const { userId } = context.query
    const response = await axios.get(`http://localhost:5000/getChats?userId=${userId}`)

    const chats = response.data


    if (!session) {
        return {
            redirect: {
                destination: '/api/auth/signin?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2F',
                permanent: false
            }
        }
    }

    return {
        props: { chats, session },
    }
}


export default chatsIndex
