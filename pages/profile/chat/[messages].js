import React, { useEffect, useState } from 'react'
import { getSession, useSession } from 'next-auth/react'
import { io } from 'socket.io-client'
import Head from 'next/head'
import { useRouter } from 'next/router'
import axios from 'axios'
import ChatWrapper from '../../../src/styledComponents/ChatWrapper'
import MainNav from '../../../src/Components/MainNav'
import Input from '../../../src/styledComponents/Input'
import Button from '../../../src/styledComponents/Button'
import MessageCard from '../../../src/Components/MessageCard'
import Form from '../../../src/styledComponents/Form'

const socket = io("http://localhost:5000")

function messagesPage({ messageArray }) {

    const [chat, setChat] = useState([])

    const { data: session } = useSession()
    const user = session?.user.data

    const router = useRouter()
    const { chatId } = router.query

    
    useEffect(() => {
        const messages = messageArray.data
        setChat([...messages])
        console.log(messages)
    }, [])


    useEffect(() => {
        console.log(socket.id)
        socket.on("recieve-message", (message, userId, chat_Id) => {
            setChat([...chat, { message: message, user_id: userId, chat_id: chat_Id }])
            console.log(chat)
        })
    })

    useEffect(() => {
        console.log(chat)
    }, [chat])



    const onMessageSubmit = e => {
        e.preventDefault()
        const { message } = e.target.elements
        const messageText = message.value
        socket.emit("send-message", messageText, user.id, chatId , (sentMessage) => {
            setChat([...chat, { message: sentMessage, user_id: user.id, chat_id: chatId,}])
        })
        message.value = null
    }

    const renderChat = () => {
        return chat.map(({message, user_id}, index) => (
            <MessageCard key={index} fromMe={ user_id === user.id} >
                {message}
            </MessageCard>
        ))
    }

    return (
        <ChatWrapper className="messages" >
            <Head>
                <title> Chats </title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <MainNav chatChildren={user.name}>
            </MainNav>
            <ChatWrapper className="messages__main">
                <ChatWrapper className="messages__render" >
                    {renderChat()}
                </ChatWrapper>
                <ChatWrapper>
                    <Form onSubmit={onMessageSubmit} >
                        <ChatWrapper className="messages__input__btn" >
                            <ChatWrapper>
                                <Input
                                    type="text"
                                    placeholder="Type your message"
                                    className="messages__input"
                                    name="message"
                                />
                            </ChatWrapper>
                            <ChatWrapper>
                                <Button name="primary" type="submit" >
                                    Send
                                </Button>
                            </ChatWrapper>
                        </ChatWrapper>
                    </Form>
                </ChatWrapper>
            </ChatWrapper>
        </ChatWrapper>
    )
}

export async function getServerSideProps(context) {
    const session = await getSession(context)
    const { chatId } = context.query
    console.log("messages: ",chatId)
    const response = await axios.get(`http://localhost:5000/getChatMessages?chatId=${chatId}`)


    console.log("response: ", response.data)
    const messageArray = response.data

    if (!session) {
        return {
            redirect: {
                destination: '/api/auth/signin?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2F',
                permanent: false
            }
        }
    }

    return {
        props: { session,messageArray }
    }
}

export default messagesPage
